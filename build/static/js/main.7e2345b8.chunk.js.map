{"version":3,"sources":["components/FilteredPersons.js","services/persons.js","App.js","index.js"],"names":["FilteredPersons","_ref","filteredPersons","updateDo","deleteDo","react_default","a","createElement","className","name","number","onClick","baseUrl","persons","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","concat","del","delete","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","event","setState","defineProperty","target","value","pickPersons","localArr","state","forEach","item","index","toLowerCase","includes","searchName","push","addName","console","log","newName","preventDefault","nameObject","newPhoneNumber","find","n","error","personsService","catch","setTimeout","updateNameNumber","person","window","confirm","updatePerson","objectSpread","map","p","filter","deletePerson","phoneNumber","_this2","_this3","filteredList","message","onChange","onSubmit","type","components_FilteredPersons","key","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.7e2345b8.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\tconst FilteredPersons =({filteredPersons, updateDo, deleteDo})=>{\r\n\t\treturn (\r\n\t\t\t<li className=\"person\">\r\n\t\t\t\t{filteredPersons.name} tel.\r\n\t\t\t\t{filteredPersons.number}\r\n\t\t\t\t<button onClick={updateDo}>{\"Update\"}</button>\r\n\t\t\t\t<button onClick={deleteDo}>{\"Delete\"}</button>\r\n\t\t\t</li>\r\n\t\t)\r\n\t} \r\n\r\nexport default FilteredPersons","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons' //Frontend in Backend \r\n//const baseUrl = 'https://floating-sea-47759.herokuapp.com/api/persons/' //Backend in Heroku\r\n//const baseUrl = 'http://localhost:3001/api/persons' //REST apina NodeJs\r\n//const baseUrl = 'http://localhost:3001/persons' //db.json testi srv\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  /* const nonExisting = {\r\n    name: 'nonExisting',\r\n\t\t\tphoneNumber:654321,\r\n\t\t\tid:20\r\n  }\r\n  return request.then(response => response.data.concat(nonExisting)) */\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst del = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, del }\r\n","import React from 'react'\r\n\r\nimport FilteredPersons from './components/FilteredPersons'\r\nimport personsService from './services/persons'\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      persons: [\r\n        { \r\n\t\t\tname: '1.Arto Hellas',\r\n\t\t\tphoneNumber:123456,\r\n\t\t\tid:1\r\n\t\t},\r\n\t\t{ \r\n\t\t\tname: '2.Sanna Kymäläinen',\r\n\t\t\tphoneNumber:654321,\r\n\t\t\tid:2\r\n\t\t}\r\n      ],\r\n      newName: 'nimi',\r\n\t  newPhoneNumber: '000000',\r\n\t  searchName: '',\r\n\t  error:null\r\n    }\r\n}\r\n \r\n\t/* componentWillMount() {\r\n\t\tpersonsService\r\n\t\t  .getAll()\r\n\t\t  .then(persons => {\r\n\t\t\tthis.setState({persons})\r\n\t  })\r\n\t} */\r\n\t  \r\n\tcomponentWillMount() {\r\n\t\tpersonsService\r\n\t\t  .getAll()\r\n\t\t  .then(persons => {\r\n\t\t\tthis.setState({persons})\r\n\t\t  }, [])\r\n\t  }\r\n\r\n/*FormInput EVENT HANDLER*/\t\r\n\thandleInputChange=(event)=> {\r\n\t\tthis.setState({[event.target.name]: event.target.value })\r\n\t}\r\n\t\r\n\tpickPersons= () => {\r\n\t\tconst localArr=[]\r\n\t\tthis.state.persons.forEach((item, index)=>{\r\n\t\t//Jos Str löytyy nimestä, laitetaan listaan\r\n\t\t\tif (item.name.toLowerCase().includes(this.state.searchName.toLowerCase())){\r\n\t\t\t\tlocalArr.push(item)\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn localArr\r\n\t}\r\n\t\r\n\taddName = (event) =>{\r\n\t\tconsole.log(`addName ${this.state.newName}`)\r\n\t\tevent.preventDefault()\r\n\t\t\r\n\t\tconst nameObject = {\r\n\t\t\tname: this.state.newName,\r\n\t\t\tnumber: this.state.newPhoneNumber,\r\n\t\t\t//id: this.state.persons.length + 1 //REST api hoitaa id:een \r\n\t\t}\r\n\t\t//Etsitään nimiduplikaatit\r\n\t\tconst duplicate=this.state.persons.find(n => n.name.toLowerCase() === this.state.newName.toLowerCase()) ? true : false\r\n\t\tif (duplicate){\r\n\t\t\tthis.setState({\r\n\t\t\t\terror:`Henkilö '${nameObject.name}' on jo luettelossa!`\r\n\t\t\t})\r\n\t\t}else{\r\n\t\t\tpersonsService\r\n\t\t\t.create(nameObject)\r\n\t\t\t.then(newName => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\terror:`Lisätty '${this.state.newName}'`,\r\n\t\t\t\t\tpersons: this.state.persons.concat(newName),\r\n\t\t\t\t\tnewName: 'nimi'\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\terror:`Database malfunction! Primary key broken, fix it manually`\t\t\t\t\t\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\tsetTimeout(() => {this.setState({error: null})}, 5000)\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\tupdateNameNumber = (id) => {\r\n\t\t//console.log(`updateNameNumber ${id}`)\r\n\t\t//console.log('->' + id)\r\n\t\treturn () => {\r\n\t\t\tconst person = this.state.persons.find(n => n.id === id)\r\n\t\t\tconsole.log(person)\r\n\t\t\tconst duplicate = this.state.persons.find(n => n.name === this.state.newName) ? true : false\r\n\t\t\t//const sameName = person.name === this.state.newName ? true : false\r\n\t\t\t\r\n \t\t\tif (!duplicate){\r\n\t\t\t\tconsole.log('duplicate=FALSE')\r\n\t\t\t\tconst updatePerson = { ...person,\r\n\t\t\t\t\t\t\t\t\tname: this.state.newName,\r\n\t\t\t\t\t\t\t\t\tnumber: this.state.newPhoneNumber\r\n\t\t\t\t}\r\n\t\t\t\tpersonsService\r\n\t\t\t\t.update(id, updatePerson)\r\n\t\t\t\t.then(updatePerson => {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\terror:`Henkilön '${person.name}' tiedot päivitetty`,\r\n\t\t\t\t\t\tpersons: this.state.persons.map(p => p.id !== id ? p : updatePerson)\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t\t.catch(error => {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\terror:`Database malfunction! Primary key broken, fix it manually`\r\n\t\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t\tsetTimeout(() => {this.setState({error: null})}, 5000)\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('duplicate=TRUE')\r\n\t\t\t\tconsole.log('->' + this.state.newName)\r\n\t\t\t\t\r\n\t\t\t\tif (person.name === this.state.newName && window.confirm(this.state.newName +\" on jo luettelossa, korvataako vanha numero uudella?\")) { \r\n\t\t\t\t\tconsole.log('same name && window ok')\r\n\t\t\t\t\tconst updatePerson = { ...person,\r\n\t\t\t\t\t\t\t\t\t//name: this.state.newName,\r\n\t\t\t\t\t\t\t\t\tnumber: this.state.newPhoneNumber\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpersonsService\r\n\t\t\t\t\t.update(id, updatePerson)\r\n\t\t\t\t\t.then(updatePerson => {\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\terror:`Henkilön '${person.name}' numero muutettu`,\r\n\t\t\t\t\t\t\tpersons: this.state.persons.map(p => p.id !== id ? p : updatePerson)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(error => {\r\n\t\t\t\t  //alert(`muistiinpano '${person.name}' on jo valitettavasti poistettu palvelimelta`)\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\terror:`muistiinpano '${person.name}' on jo valitettavasti poistettu palvelimelta`,\r\n\t\t\t\t\t\tpersons: this.state.persons.filter(n => n.id !== id)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t\tsetTimeout(() => {this.setState({error: null})}, 5000)\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log('not same name OR window nok')\r\n\t\t\t\t\t//alert(`Henkilö '${person.name}' on jo luettelossa!`)\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\terror:`Henkilö '${person.name}' on jo luettelossa!`\r\n\t\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\tdeletePerson = (id) => {\r\n\t\t//console.log('deletePerson '+id)\r\n\t\tconst person = this.state.persons.find(n => n.id === id)\r\n\t\treturn () => {\r\n\t\t\tpersonsService\r\n\t\t\t.del(id)\r\n\t\t\t.then(\r\n\t\t\t\tthis.setState({ \r\n\t\t\t\t\terror:`'${person.name}' poistettu`,\r\n\t\t\t\t\tpersons: this.state.persons.filter(n => n.id !== id) })\r\n\t\t\t)\r\n\t\t\t.catch(error => {\r\n\t\t\t//alert(`muistiinpano '${person.name}' on jo valitettavasti poistettu palvelimelta`)\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\terror:`'${person.name}' on jo valitettavasti poistettu palvelimelta`,\r\n\t\t\t\t\tpersons: this.state.persons.filter(n => n.id !== id)\r\n\t\t\t\t})\r\n\t\t\t\t\r\n\t\t\t})\r\n\t\t\tsetTimeout(() => {this.setState({error: null})}, 5000)\r\n\t\t}\r\n\t}\r\n    \r\n\trender() {\r\n\t\tconst filteredList= this.pickPersons()\r\n\t\t\r\n\t\tconst Notification = ({ message }) => {\r\n\t\t\tif (message === null) {\r\n\t\t\t\treturn null\r\n\t\t\t}\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"error\">\r\n\t\t\t\t  {message}\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t\r\n\t\t\t\r\n\treturn (\r\n      <div>\r\n        <h2>Puhelinluettelo</h2>\r\n\t\t<Notification message={this.state.error}/>\r\n\r\n\t\t<div>\r\n\t\t\tHae etunimellä: <input\r\n\t\t\t\tname=\"searchName\"\r\n\t\t\t\tvalue= {this.state.searchName}\r\n\t\t\t\tonChange={this.handleInputChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\r\n        <form onSubmit={this.addName}>\r\n\t\t<label>\r\n\t\tOTSIKKO1:\t\r\n\t\t\t<div>\r\n\t\t\t\tnimi: <input\r\n\t\t\t\t\tname= \"newName\"\r\n\t\t\t\t\tvalue= {this.state.newName}\r\n\t\t\t\t\tonChange={this.handleInputChange}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t</label>\r\n\t\t<br />\r\n\t\t<label>\r\n\t\tOTSIKKO2:\t\r\n\t\t\t<div>\r\n\t\t\t\tnumero: <input\r\n\t\t\t\t\tname= \"newPhoneNumber\"\r\n\t\t\t\t\tvalue= {this.state.newPhoneNumber}\r\n\t\t\t\t\tonChange={this.handleInputChange}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<input type=\"submit\" value=\"Lisää\" />\r\n\t\t</label>\r\n        </form>\r\n        \r\n\t\t<h2>Numerot</h2>\r\n\t\t\t<div>\r\n\t\t\t\t{filteredList.map(filteredPersons=>\r\n\t\t\t\t<FilteredPersons\r\n\t\t\t\t\tkey={filteredPersons.id} \r\n\t\t\t\t\tfilteredPersons={filteredPersons}\r\n\t\t\t\t\tupdateDo={this.updateNameNumber(filteredPersons.id)}\r\n\t\t\t\t\tdeleteDo={this.deletePerson(filteredPersons.id)}\r\n\t\t\t\t/>)}\r\n\t\t\t</div>\t\t\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","//--2.19 kurssien sisältö--\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\n\n\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}