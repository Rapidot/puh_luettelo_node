{"version":3,"sources":["components/FilteredPersons.js","services/persons.js","App.js","index.js"],"names":["FilteredPersons","_ref","filteredPersons","updateDo","deleteDo","react_default","a","createElement","className","name","number","onClick","baseUrl","persons","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","concat","del","delete","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","event","setState","defineProperty","target","value","pickPersons","state","searchName","filter","item","addName","console","log","newName","preventDefault","nameObject","newPhoneNumber","find","n","toLowerCase","error","personsService","catch","setTimeout","updateNameNumber","person","window","confirm","updatePerson","objectSpread","map","p","deletePerson","_this2","_this3","filteredList","message","onChange","onSubmit","type","components_FilteredPersons","key","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.1616a89a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\tconst FilteredPersons =({filteredPersons, updateDo, deleteDo})=>{\r\n\t\treturn (\r\n\t\t\t<li className=\"person\">\r\n\t\t\t\t{filteredPersons.name} tel.\r\n\t\t\t\t{filteredPersons.number}\r\n\t\t\t\t<button onClick={updateDo}>{\"Update\"}</button>\r\n\t\t\t\t<button onClick={deleteDo}>{\"Delete\"}</button>\r\n\t\t\t</li>\r\n\t\t)\r\n\t} \r\n\r\nexport default FilteredPersons","import axios from 'axios'\r\n\r\n//const baseUrl = '/api/persons' //Frontend in Backend \r\n//const baseUrl = 'https://secret-falls-85929.herokuapp.com/api/persons/' //Backend in Heroku\r\nconst baseUrl = 'http://localhost:3001/api/persons' //REST apina NodeJs\r\n//const baseUrl = 'http://localhost:3001/persons' //db.json testi srv\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  /* const nonExisting = {\r\n    name: 'nonExisting',\r\n\t\t\tphoneNumber:654321,\r\n\t\t\tid:20\r\n  }\r\n  return request.then(response => response.data.concat(nonExisting)) */\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst del = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, del }\r\n","import React from 'react'\r\n\r\nimport FilteredPersons from './components/FilteredPersons'\r\nimport personsService from './services/persons'\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n       persons: [], \r\n      newName: 'nimi',\r\n\t  newPhoneNumber: '000000',\r\n\t  searchName: '',\r\n\t  error:null\r\n    }\r\n}\r\n\tcomponentWillMount() {\r\n\t\tpersonsService\r\n\t\t  .getAll()\r\n\t\t  .then(persons => {\r\n\t\t\tthis.setState({persons})\r\n\t  })\r\n\t}  \r\n\t\r\n/*FormInput EVENT HANDLER*/\t\r\n\thandleInputChange=(event)=> {\r\n\t\tthis.setState({[event.target.name]: event.target.value })\r\n\t}\r\n\t\r\n\tpickPersons = () => {\r\n\t\t//Huonompi - löytää vain koko sanan\r\n\t\tlet filteredObjects = []\r\n\t\tif (this.state.searchName){\r\n\t\t\tfilteredObjects = this.state.persons.filter(item => item.name === this.state.searchName)\r\n\t\t}else {\r\n\t\t\tfilteredObjects = this.state.persons\r\n\t\t}\r\n\t\treturn filteredObjects\r\n\t\t//Parempi - haku jo 1. kirjaimella\r\n\t\t/* let localArr = []\r\n\t\tif (this.state.searchName){\r\n\t\t\tthis.state.persons.forEach((item, index)=>{\r\n\t\t\t//Jos Str löytyy nimestä, laitetaan listaan\r\n\t\t\t\tif (item.name.toLowerCase().includes(this.state.searchName.toLowerCase())){\r\n\t\t\t\t\tlocalArr.push(item)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}else{\r\n\t\t\tlocalArr = this.state.persons\r\n\t\t}\r\n\t\treturn localArr */\r\n\t}\r\n\t\r\n\taddName = (event) =>{\r\n\t\tconsole.log(`addName ${this.state.newName}`)\r\n\t\tevent.preventDefault()\r\n\t\t\r\n\t\tconst nameObject = {\r\n\t\t\tname: this.state.newName,\r\n\t\t\tnumber: this.state.newPhoneNumber,\r\n\t\t\t//id: this.state.persons.length + 1 //REST api hoitaa id:een \r\n\t\t}\r\n\t\t//Etsitään nimiduplikaatit\r\n\t\tconst duplicate=this.state.persons.find(n => n.name.toLowerCase() === this.state.newName.toLowerCase()) ? true : false\r\n\t\tif (duplicate){\r\n\t\t\tthis.setState({\r\n\t\t\t\terror:`Henkilö '${nameObject.name}' on jo luettelossa!`\r\n\t\t\t})\r\n\t\t}else{\r\n\t\t\tpersonsService\r\n\t\t\t.create(nameObject)\r\n\t\t\t.then(newName => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\terror:`Lisätty '${this.state.newName}'`,\r\n\t\t\t\t\tpersons: this.state.persons.concat(newName),\r\n\t\t\t\t\tnewName: 'nimi'\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\terror:`Database malfunction! Primary key broken, fix it manually`\t\t\t\t\t\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\tsetTimeout(() => {this.setState({error: null})}, 5000)\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\tupdateNameNumber = (id) => {\r\n\t\t//console.log(`updateNameNumber ${id}`)\r\n\t\t//console.log('->' + id)\r\n\t\treturn () => {\r\n\t\t\tconst person = this.state.persons.find(n => n.id === id)\r\n\t\t\tconsole.log(person)\r\n\t\t\tconst duplicate = this.state.persons.find(n => n.name === this.state.newName) ? true : false\r\n\t\t\t//const sameName = person.name === this.state.newName ? true : false\r\n\t\t\t\r\n \t\t\tif (!duplicate){\r\n\t\t\t\tconsole.log('duplicate=FALSE')\r\n\t\t\t\tconst updatePerson = { ...person,\r\n\t\t\t\t\t\t\t\t\tname: this.state.newName,\r\n\t\t\t\t\t\t\t\t\tnumber: this.state.newPhoneNumber\r\n\t\t\t\t}\r\n\t\t\t\tpersonsService\r\n\t\t\t\t.update(id, updatePerson)\r\n\t\t\t\t.then(updatePerson => {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\terror:`Henkilön '${person.name}' tiedot päivitetty`,\r\n\t\t\t\t\t\tpersons: this.state.persons.map(p => p.id !== id ? p : updatePerson)\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t\t.catch(error => {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\terror:`Database malfunction! Primary key broken, fix it manually`\r\n\t\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t\tsetTimeout(() => {this.setState({error: null})}, 5000)\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('duplicate=TRUE')\r\n\t\t\t\tconsole.log('->' + this.state.newName)\r\n\t\t\t\t\r\n\t\t\t\tif (person.name === this.state.newName && window.confirm(this.state.newName +\" on jo luettelossa, korvataako vanha numero uudella?\")) { \r\n\t\t\t\t\tconsole.log('same name && window ok')\r\n\t\t\t\t\tconst updatePerson = { ...person,\r\n\t\t\t\t\t\t\t\t\t//name: this.state.newName,\r\n\t\t\t\t\t\t\t\t\tnumber: this.state.newPhoneNumber\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpersonsService\r\n\t\t\t\t\t.update(id, updatePerson)\r\n\t\t\t\t\t.then(updatePerson => {\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\terror:`Henkilön '${person.name}' numero muutettu`,\r\n\t\t\t\t\t\t\tpersons: this.state.persons.map(p => p.id !== id ? p : updatePerson)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(error => {\r\n\t\t\t\t  //alert(`muistiinpano '${person.name}' on jo valitettavasti poistettu palvelimelta`)\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\terror:`muistiinpano '${person.name}' on jo valitettavasti poistettu palvelimelta`,\r\n\t\t\t\t\t\tpersons: this.state.persons.filter(n => n.id !== id)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t\tsetTimeout(() => {this.setState({error: null})}, 5000)\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log('not same name OR window nok')\r\n\t\t\t\t\t//alert(`Henkilö '${person.name}' on jo luettelossa!`)\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\terror:`Henkilö '${person.name}' on jo luettelossa!`\r\n\t\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\tdeletePerson = (id) => {\r\n\t\t//console.log('deletePerson '+id)\r\n\t\tconst person = this.state.persons.find(n => n.id === id)\r\n\t\treturn () => {\r\n\t\t\tpersonsService\r\n\t\t\t.del(id)\r\n\t\t\t.then(\r\n\t\t\t\tthis.setState({ \r\n\t\t\t\t\terror:`'${person.name}' poistettu`,\r\n\t\t\t\t\tpersons: this.state.persons.filter(n => n.id !== id) })\r\n\t\t\t)\r\n\t\t\t.catch(error => {\r\n\t\t\t//alert(`muistiinpano '${person.name}' on jo valitettavasti poistettu palvelimelta`)\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\terror:`'${person.name}' on jo valitettavasti poistettu palvelimelta`,\r\n\t\t\t\t\tpersons: this.state.persons.filter(n => n.id !== id)\r\n\t\t\t\t})\r\n\t\t\t\t\r\n\t\t\t})\r\n\t\t\tsetTimeout(() => {this.setState({error: null})}, 5000)\r\n\t\t}\r\n\t}\r\n    \r\n\trender() {\r\n\t\tconst filteredList= this.pickPersons()\r\n\t\t\r\n\t\tconst Notification = ({ message }) => {\r\n\t\t\tif (message === null) {\r\n\t\t\t\treturn null\r\n\t\t\t}\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"error\">\r\n\t\t\t\t  {message}\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t\r\n\t\t\t\r\n\treturn (\r\n      <div>\r\n        <h2>Puhelinluettelo</h2>\r\n\t\t<Notification message={this.state.error}/>\r\n\r\n\t\t<div>\r\n\t\t\tHae etunimellä: <input\r\n\t\t\t\tname=\"searchName\"\r\n\t\t\t\tvalue= {this.state.searchName}\r\n\t\t\t\tonChange={this.handleInputChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\r\n        <form onSubmit={this.addName}>\r\n\t\t<label>\r\n\t\tOTSIKKO1:\t\r\n\t\t\t<div>\r\n\t\t\t\tnimi: <input\r\n\t\t\t\t\tname= \"newName\"\r\n\t\t\t\t\tvalue= {this.state.newName}\r\n\t\t\t\t\tonChange={this.handleInputChange}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t</label>\r\n\t\t<br />\r\n\t\t<label>\r\n\t\tOTSIKKO2:\t\r\n\t\t\t<div>\r\n\t\t\t\tnumero: <input\r\n\t\t\t\t\tname= \"newPhoneNumber\"\r\n\t\t\t\t\tvalue= {this.state.newPhoneNumber}\r\n\t\t\t\t\tonChange={this.handleInputChange}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<input type=\"submit\" value=\"Lisää\" />\r\n\t\t</label>\r\n        </form>\r\n        \r\n\t\t<h2>Numerot</h2>\r\n\t\t\t<div>\r\n\t\t\t\t{filteredList.map(filteredPersons=>\r\n\t\t\t\t<FilteredPersons\r\n\t\t\t\t\tkey={filteredPersons.id} \r\n\t\t\t\t\tfilteredPersons={filteredPersons}\r\n\t\t\t\t\tupdateDo={this.updateNameNumber(filteredPersons.id)}\r\n\t\t\t\t\tdeleteDo={this.deletePerson(filteredPersons.id)}\r\n\t\t\t\t/>)}\r\n\t\t\t</div>\t\t\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","//--2.19 kurssien sisältö--\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\n\n\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}